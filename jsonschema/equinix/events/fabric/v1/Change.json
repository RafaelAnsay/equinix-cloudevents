{
    "$id": "https://equinix.github.io/equinix-cloudevents/jsonschema/equinix/events/fabric/v1/Change.json",
    "name": "Change",
    "examples": [],
    "package": "equinix.events.fabric.v1",
    "datatype": "equinix.events.fabric.v1.Change",
    "cloudeventTypes": [
        "equinix.fabric.connection.status.up",
        "equinix.fabric.connection.status.down",
        "equinix.fabric.connection.state.draft",
        "equinix.fabric.connection.state.cancelled",
        "equinix.fabric.connection.state.pending",
        "equinix.fabric.connection.state.provisioning",
        "equinix.fabric.connection.state.provisioned",
        "equinix.fabric.connection.state.active",
        "equinix.fabric.connection.state.reprovisioning",
        "equinix.fabric.connection.state.deprovisioning",
        "equinix.fabric.connection.state.deprovisioned",
        "equinix.fabric.connection.state.failed",
        "equinix.fabric.connection.routing_protocol_state.provisioning",
        "equinix.fabric.connection.routing_protocol_state.provisioned",
        "equinix.fabric.connection.routing_protocol_state.reprovisioning",
        "equinix.fabric.connection.routing_protocol_state.deprovisioning",
        "equinix.fabric.connection.routing_protocol_state.deprovisioned",
        "equinix.fabric.connection.routing_protocol_state.failed",
        "equinix.fabric.connection.bgp_ipv4_status.up",
        "equinix.fabric.connection.bgp_ipv4_status.down",
        "equinix.fabric.connection.bgp_ipv6_status.up",
        "equinix.fabric.connection.bgp_ipv6_status.down",
        "equinix.fabric.connection.bgp_ipv4_session.established",
        "equinix.fabric.connection.bgp_ipv4_session.connect",
        "equinix.fabric.connection.bgp_ipv4_session.opensent",
        "equinix.fabric.connection.bgp_ipv4_session.openconfirm",
        "equinix.fabric.connection.bgp_ipv4_session.active",
        "equinix.fabric.connection.bgp_ipv4_session.idle",
        "equinix.fabric.connection.bgp_ipv6_session.established",
        "equinix.fabric.connection.bgp_ipv6_session.connect",
        "equinix.fabric.connection.bgp_ipv6_session.opensent",
        "equinix.fabric.connection.bgp_ipv6_session.openconfirm",
        "equinix.fabric.connection.bgp_ipv6_session.active",
        "equinix.fabric.connection.bgp_ipv6_session.idle",
        "equinix.fabric.connection.reset_bgp_ipv4.succeeded",
        "equinix.fabric.connection.reset_bgp_ipv4.failed",
        "equinix.fabric.connection.reset_bgp_ipv6.succeeded",
        "equinix.fabric.connection.reset_bgp_ipv6.failed",
        "equinix.fabric.connection.clear_bgp_ipv4.succeeded",
        "equinix.fabric.connection.clear_bgp_ipv4.failed",
        "equinix.fabric.connection.clear_bgp_ipv6.succeeded",
        "equinix.fabric.connection.clear_bgp_ipv6.failed",
        "equinix.fabric.connection.clear_bgp_ipv4_inbound.succeeded",
        "equinix.fabric.connection.clear_bgp_ipv4_inbound.failed",
        "equinix.fabric.connection.clear_bgp_ipv6_inbound.succeeded",
        "equinix.fabric.connection.clear_bgp_ipv6_inbound.failed",
        "equinix.fabric.route_filter.state.provisioning",
        "equinix.fabric.route_filter.state.provisioned",
        "equinix.fabric.route_filter.state.reprovisioning",
        "equinix.fabric.route_filter.state.deprovisioning",
        "equinix.fabric.route_filter.state.deprovisioned",
        "equinix.fabric.route_filter.state.not_provisioned",
        "equinix.fabric.route_filter.state.not_deprovisioned",
        "equinix.fabric.route_filter.rule_state.provisioning",
        "equinix.fabric.route_filter.rule_state.provisionined",
        "equinix.fabric.route_filter.rule_state.reprovisioning",
        "equinix.fabric.route_filter.rule_state.deprovisioning",
        "equinix.fabric.route_filter.rule_state.deprovisioned",
        "equinix.fabric.route_filter.rule_state.not_provisioned",
        "equinix.fabric.route_filter.rule_state.not_deprovisioned",
        "equinix.fabric.route_filter.status.pending_bgp_configuration",
        "equinix.fabric.route_filter.status.attaching",
        "equinix.fabric.route_filter.status.attached",
        "equinix.fabric.route_filter.status.detaching",
        "equinix.fabric.route_filter.status.detached",
        "equinix.fabric.route_filter.status.failed",
        "equinix.fabric.port.status.up",
        "equinix.fabric.port.status.down",
        "equinix.fabric.port.state.pending",
        "equinix.fabric.port.state.provisioning",
        "equinix.fabric.port.state.provisioned",
        "equinix.fabric.port.state.active",
        "equinix.fabric.port.state.inactive",
        "equinix.fabric.port.state.deprovisioning",
        "equinix.fabric.port.state.deprovisioned",
        "equinix.fabric.port.state.failed",
        "equinix.fabric.port.state.to_be_added",
        "equinix.fabric.port.state.to_be_deleted",
        "equinix.fabric.port.state.added",
        "equinix.fabric.port.state.deleted",
        "equinix.fabric.router.state.provisioning",
        "equinix.fabric.router.state.provisioned",
        "equinix.fabric.router.state.locked",
        "equinix.fabric.router.state.deprovisioning",
        "equinix.fabric.router.state.deprovisioned",
        "equinix.fabric.router.state.not_provisioned",
        "equinix.fabric.router.state.not_deprovisioned",
        "equinix.fabric.router.bgp_session_status_update.pending",
        "equinix.fabric.router.bgp_session_status_update.succeeded",
        "equinix.fabric.router.bgp_session_status_update.failed",
        "equinix.fabric.router.route_table_entry_update.pending",
        "equinix.fabric.router.route_table_entry_update.succeeded",
        "equinix.fabric.router.route_table_entry_update.failed",
        "equinix.fabric.router.received_route_entry_update.pending",
        "equinix.fabric.router.received_route_entry_update.succeeded",
        "equinix.fabric.router.received_route_entry_update.failed",
        "equinix.fabric.router.advertised_route_entry_update.pending",
        "equinix.fabric.router.advertised_route_entry_update.succeeded",
        "equinix.fabric.router.advertised_route_entry_update.failed",
        "equinix.fabric.network.state.active",
        "equinix.fabric.network.state.inactive",
        "equinix.fabric.network.state.deleted",
        "equinix.fabric.time_service.state.pending_configuration",
        "equinix.fabric.time_service.state.provisioning",
        "equinix.fabric.time_service.state.provisioned",
        "equinix.fabric.time_service.state.deprovisioning",
        "equinix.fabric.time_service.state.deprovisioned",
        "equinix.fabric.time_service.state.configuring_failed",
        "equinix.fabric.time_service.state.provisioning_failed",
        "equinix.fabric.time_service.state.deprovisioning_failed",
        "equinix.fabric.time_service.state.configuring",
        "equinix.fabric.time_service.state.cancelled",
        "equinix.fabric.service_token.state.active",
        "equinix.fabric.service_token.state.inactive",
        "equinix.fabric.service_token.state.expired",
        "equinix.fabric.service_token.state.deleted",
        "equinix.fabric.service_profile.state.pending_approval",
        "equinix.fabric.service_profile.state.rejected",
        "equinix.fabric.service_profile.state.active",
        "equinix.fabric.service_profile.state.deleted",
        "equinix.fabric.stream.state.provisioning",
        "equinix.fabric.stream.state.provisioned",
        "equinix.fabric.stream.state.deprovisioning",
        "equinix.fabric.stream.state.deprovisioned",
        "equinix.fabric.stream.state.failed",
        "equinix.fabric.stream.resource_status.attaching",
        "equinix.fabric.stream.resource_status.attached",
        "equinix.fabric.stream.resource_status.detaching",
        "equinix.fabric.stream.resource_status.detached",
        "equinix.fabric.stream.resource_status.failed",
        "equinix.fabric.stream_subscription.state.provisioning",
        "equinix.fabric.stream_subscription.state.provisioned",
        "equinix.fabric.stream_subscription.state.deprovisioning",
        "equinix.fabric.stream_subscription.state.deprovisioned",
        "equinix.fabric.stream_subscription.state.failed",
        "equinix.network_edge.device.state.provisioned",
        "equinix.network_edge.device.state.deprovisioned",
        "equinix.network_edge.device.state.pending_configuration",
        "equinix.network_edge.device.state.rebooted",
        "equinix.network_edge.device.acl.removed",
        "equinix.network_edge.device.attribute.changed",
        "equinix.resource_manager.organization.state.created",
        "equinix.resource_manager.organization.state.updated",
        "equinix.resource_manager.organization.state.deleted",
        "equinix.resource_manager.project.state.created",
        "equinix.resource_manager.project.state.updated",
        "equinix.resource_manager.project.state.deleted",
        "equinix.identity.user.state.created",
        "equinix.identity.user.state.updated",
        "equinix.identity.user.state.deactivated",
        "equinix.identity.user.state.deleted",
        "equinix.identity.user.activity.logged_in",
        "equinix.identity.user.activity.logged_out",
        "equinix.identity.service_account.state.created",
        "equinix.identity.service_account.state.updated",
        "equinix.identity.service_account.state.deleted",
        "equinix.access_manager.user.role.added",
        "equinix.access_manager.user.role.removed",
        "equinix.access_manager.user.critical_resource_access.unauthorized",
        "equinix.access_manager.service_account.action.authenticated ",
        "equinix.access_manager.service_account.role.added ",
        "equinix.access_manager.service_account.role.removed ",
        "equinix.access_manager.service_account.critical_resource_access.unauthorized "
    ],
    "product": "Equinix Fabric Change",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/Change",
    "definitions": {
        "Change": {
            "properties": {
                "resource": {
                    "$ref": "#/definitions/Resource",
                    "additionalProperties": true,
                    "description": "Optional. The Backup event payload. Unset for deletion events."
                },
                "message": {
                    "type": "string",
                    "description": "Supporting message describing the event"
                },
                "changeLog": {
                    "$ref": "#/definitions/ChangeLog",
                    "additionalProperties": true,
                    "description": "ChangLog information for the resource that fired the event"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Change Event Data",
            "description": "The data within all Change events."
        },
        "Resource": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "Link to the resource that has generated the event"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the resource generating the event"
                },
                "uuid": {
                    "type": "string",
                    "description": "Equinix assigned unique identifier of the resource generating the event"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the resource generating the event"
                },
                "state": {
                    "type": "string",
                    "description": "State of the resource generating the event"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Resource",
            "description": "Schema of the resource that fired the event"
        },
        "ChangeLog": {
            "properties": {
                "createdBy": {
                    "type": "string",
                    "description": "User account that created the resource that fired the event"
                },
                "createdDateTime": {
                    "type": "string",
                    "description": "The time that the resource that fired the event was created",
                    "format": "date-time"
                },
                "updatedBy": {
                    "type": "string",
                    "description": "User account that updated the resource that fired the event"
                },
                "updatedDateTime": {
                    "type": "string",
                    "description": "The time that the resource that fired the event was updated",
                    "format": "date-time"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "ChangeLog",
            "description": "ChangeLog attribute schema"
        }
    }
}
